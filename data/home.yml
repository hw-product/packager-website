---
- id: "top"
  class: "theme-bg-primary"
  content:
    -
      - width: "7"
        heading: "Make installable system packages, not
          <text-muted>.</text-muted>war <text-muted>(files)</text-muted>"
        desc:
          - subheading: "Stop writing custom installation scripts."

          - "If you're implementing solutions for installing software because
            making installable packages is too hard, stop. If you know how to
            build your software, and know your applications dependencies, you
            can build installable system packages."
          - layout: "button"
            button:
              text: "Learn More"
              url: "#features"
      - width: "5"
        layout: "code-snippet"
        lang: "json"
        snippet: |
          {
            "target": {
              "platform": 'ubuntu',
              "version": '12.04',
              "package": 'deb',
              "arch": 'amd64'
            },
            "dependencies": {
              "build": ['libpq-dev'],
              "runtime": ['libpq5']
            },
            "build": {
              "name": 'myapp',
              "template": 'rails',
              "install_prefix", '/var/www/myapp'
            }
          }

- id: "workflow"
  class: "theme-bg-alt"
  content:
    -
      - class: "text-center"
        icon:
          class: "mega-octicon octicon-tag large-icon"
        desc:
          - heading: "Tag."
            desc:
              - "Takeout will create a new job everytime you create a tag in
                your source code repository."
      - class: "text-center"
        icon:
          class: "mega-octicon octicon-package large-icon"
        desc:
          - heading: "Package."
            desc:
              - "Takeout will build your application, create installable system
                packages (.deb or .rpm files), and make them available to
                install via package management."
      - class: "text-center"
        icon:
          class: "mega-octicon octicon-cloud-download large-icon"
        desc:
          - heading: "Install."
            desc:
              - "Install <em>your</em> applications with an <code>apt-get
                install</code> or <code>yum install</code>."

- id: "features"
  class: "theme-bg-primary features"
  content:
    -
      - layout: "window"
        width: "5"
        img:
          src: "img/github-releases.png"

      - width: "7"
        lang: "shell"
        heading: "Your packages."
        subheading: "Release your software in a ready-to-install format."
        desc:
          - "Takeout delivers lightweight system packages directly to <a
            href=https://github.com/blog/1547-release-your-software>Github
            releases</a>. Optionally, packages may also be uploaded to public or
            private package repositories hosted by Takeout, or to a third-party
            repositories such as <a href=https://packagecloud.io target=_blank
            >package cloud</a>, making updates to <em>your applications</em>
            readily available to install with an <code>apt-get update && apt-get
            upgrade</code> or a <code>yum check-update && yum upgrade</code>."
          - "What's the difference between Takeout packages and the recently
            popular software packaging trend to include all dependencies in
            single bloated package? While this approach may initially seem
            advantageous (because it reduces complexity up-front), it can
            quickly result in unwanted technical debt in the shape of redundant
            software on a system, increased risk exposure when software needs to
            be patched or upgraded, and significantly larger package sizes."
          - "Don’t ship the world, ship lightweight system packages."
    -
      - width: "7"
        heading: "Your existing workflow."
        subheading: "Takeout promotes best practices."
        desc:
          - "Takeout promotes a healthy software development life cycle (SDLC)
            by creating installable packages for every tag in your source code
            repository. Creating a package is as simple as pushing a tag. Have
            you reached a known good reference? Create a tag."
          - "<code>git tag -a 'v1.0' -m 'version 1.0' && git push --tags</code>"
          - "It just works."
      - layout: "code-snippet"
        width: "5"
        lang: "shell"
        snippet: |
          git checkout -b packages
          git commit -m 'release package v1.0'
          git tag -a 'v1.0' -m 'version 1.0'
          git push origin packages --tags
    -
      - id: "configuration"
        layout: "code-snippet"
        width: "5"
        lang: "ruby"
        snippet: |
          # -*- mode: ruby -*-
          # -*- encoding: utf-8 -*-
          Takeout.build do
            target do
              platform 'ubuntu'
              version '14.04'
            end
            dependencies do
              build ['libpq-dev']
              runtime ['libpq5']
            end
            build do
              name 'myapp'
              template :rails
              install_prefix '/var/www/myapp'
              commands do
                after.build [
                  'rake middleman'
                ]
              end
            end
          end
      - width: "7"
        heading: "Write configuration, not installation scripts."
        desc:
          - "Takeout is a single purpose CI service that responds to GitHub
            webhooks. The <code>.takeout</code> configuration file can be
            written in a simple DSL or JSON and lives in source control
            alongside your code. Takeout can even build multiple dependent
            packages from a single config file, or - if you’re really ambitious
            - an entire tree of dependent packages."
          - "Do you need to build a custom runit package that your Rails
            application depends on? We got that."
          - "Takeout has several pre-existing definitions to simplify packaging
            for common application types. Currently supported templates: :rails
            for Rails applications, :erlang for Erlang applications, and a
            :generic default template for everything else. Need something
            specific? <a href=mailto:helpdesk@packager.co>Let us know</a>!"

- id: "pricing"
  class: "theme-bg-alt text-center"
  content:
    - heading: "Join the technical preview <underline>today</underline>."
      subheading: "Try Takeout for free during the technical preview. Pricing
        will be per-repository."
    - layout: "button"
      class: "button-large"
      button:
        text: "Get Started!"
        url: "https://www.packager.co/login"
